#!/usr/bin/env fift -s
"TonUtil.fif" include
"Asm.fif" include

variable updated_storage
variable amount
variable int_msg_body
variable int_message
variable unit_id 
variable unit_level 
variable units_counter 
variable prices 
variable unit_price_lists
variable user_list
variable users
{ <b swap 32 u, swap 1 u, swap 32 u, swap dict, b> <s } : create-user
{ users @ 256 udict!+ not abort"cannot add user to dictionary" users ! } : add-user
{ <b swap 32 u, b> <s } : create-price
{ prices @ 8 udict!+ not abort"cannot add price to dictionary" prices ! } : add-price
{ <b swap dict, b> <s } : create-unit-prices
{ unit_price_lists @ 16 udict!+ not abort"cannot add unit lists to dictionary" unit_price_lists ! } : add-units-list


{ { ."success " cr } { "test failed" abort } cond } : test_ret_value
{ swap 0= test_ret_value } : test_code
{ { ."success " cr } { " contract state error: " abort } cond } : test_state
true constant bounce
"build/new-game" constant file-base
file-base +".addr" load-address 2constant dest_addr
"build/game-code.fif" include <s constant code

dictnew unit_price_lists ! // dictionary with prices for all unit and levels
dictnew prices ! // dictionary with prices for each level for one specific unit
4 create-price 
0 add-price 
prices @ create-unit-prices
0 add-units-list

dictnew prices ! 
231 create-price 
0 add-price 
prices @ create-unit-prices
1 add-units-list

dictnew prices ! 
400 create-price 
0 add-price 
prices @ create-unit-prices
2 add-units-list

dictnew prices ! 
2332 create-price 
0 add-price 
prices @ create-unit-prices
3 add-units-list

<b 
    dictnew dict,
    dictnew dict,
    unit_price_lists @ dict,
    dictnew dict,
    0 32 u,
    file-base +".pk" load-generate-keypair constant game_pk B, 
b> constant initial_storage

// [ magic:0x076ef1ea actions:Integer msgs_sent:Integer
// unixtime:Integer block_lt:Integer trans_lt:Integer
// rand_seed:Integer balance_remaining:[Integer (Maybe Cell)]
// myself:MsgAddressInt global_config:(Maybe Cell)
// ] = SmartContractInfo;

0 tuple 0x076ef1ea ,
0 , 0 , 
1570470873 ,
1 , 1 , 0 , 
0 tuple 9223372036854775807 , dictnew , , 
dest_addr nip , dictnew , 
1 tuple 
constant c7

// test # 0 external message to remove all units from store
1000 amount !
0 unit_id !
0 unit_level !
1 units_counter !
<b 0xaaeeee 32 u, 0 64 u, unit_id @ 16 u, unit_level @ 8 u, units_counter @ 16 u,  b> 
<s int_msg_body !  

<b b{00} s, bounce 1 i, b{000100} s, dest_addr addr, amount @ Gram, 0 9 64 32 + + 1+ u, int_msg_body @ s, b>  int_message !

dictnew users !
dictnew 0 0 1570570873 create-user 
<b b{00} s, b> hashu add-user

amount @ int_message @ int_msg_body @ recv_internal code initial_storage c7 runvmctx
test_code
// state can't be quickly and properlly tested now as there is no way to set cell as value in fift dicts